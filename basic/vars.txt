tx$  				transfer variable for string subroutines
sx$  				temp. Variable in string subroutines
a$ 					temp. String storage
b$  				temp. String storage
tf$  				temp. String storage
i, ii, p, pp, j  	variables in loops and for temp. stuff
c$  				character storage (string)
c%  				character storage
c2%  				character storage
ff%  				flag
rt%  				return value
rr%  				return value
t%  				temp. number
t2%  				temp. number
er  				error number
sk%  				Flag to skip generic error messages
ba  				address of the string buffer
sf%  				special flag, kind of a hack for the look command

cc$  				entered command
lc$  				"remainder command" (if separated with "and")
cb$  				input prompt
cp$() 	 			result of the lexer as a string (not standardized)
cv%()  				result of the lexer (standardized to IDs, -1 for unknown)
co%  				number of lexer results before assignment, later: reused for expected command
cc%  				number of lexer results after assignment
ct$  				temp. storage used by the lexer
al$  				string with "alles"
dn%					drive number

mc%  				max. number of commands
ms%  				max. number of synonyms
cm$()() 			commands, synonyms grouped by ID
cv$() 	 			text module "I can't do that xxx"
tb%  				number of commands (end index)


rn$  				current room name
mr%  				max. number of rooms
mi%  				max. number of items
it$()	 			names of the items
il$()  				names of objects in lower case
id$()()  			description of an object (line by line)
id%() 	 			addresses of descriptions of items in memory
ad  				temp. address pointer
sd  				temp. address pointer
mv%() 	 			Flag whether the item can be collected (= 1)
rd$()  				lines of the room description (without extras)
pl% 				number of lines of the room description
rd%  				ID of the current room
ex$() 	 			total exits in a room
xn$()  				name of the room of the respective exit
lk%()  				Flag whether the exit is blocked by default (= 1)
el%  				number of exits in the room
lx$()()  			List of exits that are no longer blocked per room ID
ri$()	  			objects in a room (as a string, but with ID as content)
il%  				number of items in a room
iv%() 	 			player's inventory (only item IDs)
rv%()  				inventory of the room (flexible, only the IDs of the objects)
ic%  				number of items in inventory
ip%()	  			Objects still visible in the room
tc%  				number of objects visible in the room
uv%() 	 			Items already used from the inventory (i.e. no longer visible there)
xp$()  				Currently usable exits
xx$()  				name of the room of the usable exits
xc%  				number of usable exits
ti%  				number of items (final index)
rs%()	  			Flag to mark that an item is somewhere in the room inventory
lr%  				ID of the last room in the game

dr$()  				strings for the cardinal points, identified by the index
op%()()  			operations that are possible in a room
op$()()  			text for the respective operation
oc%  				number of operations in room
mx% 				maximum number of unique operations (as logged by the Converter as "Unique operations in total")
mo%  				maximum number of item operations	(as logged by the Converter as "Number of item ops")
xo%					maxinum number of room operations   (as logged by the Converter as "Maximum number of room ops")
od$()	  			Applied operations on objects (only unique)
od%  				number of operations on objects
uq%  				buffer for "unique"
og%()()  			operations that are possible on objects
og$()()  			text for the respective operation
gc%  				number of operations on objects
ac%()  				Actions that are triggered by the current operation (copied over)

rd					Flag, if the raster routine is running or not